
// Run with catchsegv to see the output
/*
 *
 *   > catchsegv ./catch_segv
 *  Segmentation fault (core dumped)
 *  *** Segmentation fault
 *  Register dump:
 *
 *   RAX: 0000000000000000   RBX: 0000000000000000   RCX: 00005638c516f630
 *   RDX: 00007fff357481c8   RSI: 00007fff357481b8   RDI: 0000000000000001
 *   RBP: 00007fff357480d0   R8 : 00007f474bfe3d80   R9 : 00007f474bfe3d80
 *   R10: 00005638c6cae010   R11: 0000000000000000   R12: 00005638c516f4f0
 *   R13: 00007fff357481b0   R14: 0000000000000000   R15: 0000000000000000
 *   RSP: 00007fff357480d0
 * 
 *   RIP: 00005638c516f619   EFLAGS: 00010246
 *
 *   CS: 0033   FS: 0000   GS: 0000
 *
 *   Trap: 0000000e   Error: 00000006   OldMask: 00000000   CR2: 00000000
 *
 *   FPUCW: 0000037f   FPUSW: 00000000   TAG: 00000000
 *   RIP: 00000000   RDP: 00000000
 *
 *   ST(0) 0000 0000000000000000   ST(1) 0000 0000000000000000
 *   ST(2) 0000 0000000000000000   ST(3) 0000 0000000000000000
 *   ST(4) 0000 0000000000000000   ST(5) 0000 0000000000000000
 *   ST(6) 0000 0000000000000000   ST(7) 0000 0000000000000000
 *   mxcsr: 1f80
 *   XMM0:  000000000000000000000000425b999a XMM1:  000000000000000000000000425b999a
 *   XMM2:  000000000000000000000000425b999a XMM3:  000000000000000000000000425b999a
 *   XMM4:  000000000000000000000000425b999a XMM5:  000000000000000000000000425b999a
 *   XMM6:  000000000000000000000000425b999a XMM7:  000000000000000000000000425b999a
 *   XMM8:  000000000000000000000000425b999a XMM9:  000000000000000000000000425b999a
 *   XMM10: 000000000000000000000000425b999a XMM11: 000000000000000000000000425b999a
 *   XMM12: 000000000000000000000000425b999a XMM13: 000000000000000000000000425b999a
 *   XMM14: 000000000000000000000000425b999a XMM15: 000000000000000000000000425b999a
 *
 *  Backtrace:
 *  ./catch_segv(+0x619)[0x5638c516f619]
 *  /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7)[0x7f474bc18b97]
 *  ./catch_segv(+0x51a)[0x5638c516f51a]
 *
 *  Memory map:
 *
 *  5638c516f000-5638c5170000 r-xp 00000000 00:37 12320918 /home/jeliser/code/github_sandbox/cpp/bin/catch_segv
 *  5638c536f000-5638c5370000 r--p 00000000 00:37 12320918 /home/jeliser/code/github_sandbox/cpp/bin/catch_segv
 *  5638c5370000-5638c5371000 rw-p 00001000 00:37 12320918 /home/jeliser/code/github_sandbox/cpp/bin/catch_segv
 *  5638c6cae000-5638c6ccf000 rw-p 00000000 00:00 0 [heap]
 *  7f474b9df000-7f474b9f6000 r-xp 00000000 103:02 10093127 /lib/x86_64-linux-gnu/libgcc_s.so.1
 *  7f474b9f6000-7f474bbf5000 ---p 00017000 103:02 10093127 /lib/x86_64-linux-gnu/libgcc_s.so.1
 *  7f474bbf5000-7f474bbf6000 r--p 00016000 103:02 10093127 /lib/x86_64-linux-gnu/libgcc_s.so.1
 *  7f474bbf6000-7f474bbf7000 rw-p 00017000 103:02 10093127 /lib/x86_64-linux-gnu/libgcc_s.so.1
 *  7f474bbf7000-7f474bdde000 r-xp 00000000 103:02 10092771 /lib/x86_64-linux-gnu/libc-2.27.so
 *  7f474bdde000-7f474bfde000 ---p 001e7000 103:02 10092771 /lib/x86_64-linux-gnu/libc-2.27.so
 *  7f474bfde000-7f474bfe2000 r--p 001e7000 103:02 10092771 /lib/x86_64-linux-gnu/libc-2.27.so
 *  7f474bfe2000-7f474bfe4000 rw-p 001eb000 103:02 10092771 /lib/x86_64-linux-gnu/libc-2.27.so
 *  7f474bfe4000-7f474bfe8000 rw-p 00000000 00:00 0
 *  7f474bfe8000-7f474bfec000 r-xp 00000000 103:02 10092769 /lib/x86_64-linux-gnu/libSegFault.so
 *  7f474bfec000-7f474c1eb000 ---p 00004000 103:02 10092769 /lib/x86_64-linux-gnu/libSegFault.so
 *  7f474c1eb000-7f474c1ec000 r--p 00003000 103:02 10092769 /lib/x86_64-linux-gnu/libSegFault.so
 *  7f474c1ec000-7f474c1ed000 rw-p 00004000 103:02 10092769 /lib/x86_64-linux-gnu/libSegFault.so
 *  7f474c1ed000-7f474c214000 r-xp 00000000 103:02 10092732 /lib/x86_64-linux-gnu/ld-2.27.so
 *  7f474c3e1000-7f474c3e4000 rw-p 00000000 00:00 0
 *  7f474c412000-7f474c414000 rw-p 00000000 00:00 0
 *  7f474c414000-7f474c415000 r--p 00027000 103:02 10092732 /lib/x86_64-linux-gnu/ld-2.27.so
 *  7f474c415000-7f474c416000 rw-p 00028000 103:02 10092732 /lib/x86_64-linux-gnu/ld-2.27.so
 *  7f474c416000-7f474c417000 rw-p 00000000 00:00 0
 *  7fff35729000-7fff3574a000 rw-p 00000000 00:00 0 [stack]
 *  7fff357b1000-7fff357b4000 r--p 00000000 00:00 0 [vvar]
 *  7fff357b4000-7fff357b6000 r-xp 00000000 00:00 0 [vdso]
 *  ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0 [vsyscall]
 *
 */

int foo() {
  float* ptr = nullptr;
  *ptr = 54.9;
}

int main(int argc, char const* argv[]) {
  foo();

  return 0;
}
